xmlns et prefix
https://www.w3schools.com/xml/

WSDL2COBOL ? pour traiter le xml ?
cics containeur

Situation	                                Avec préfixe (xmlns:prefix)	                Sans préfixe (xmlns)

Mélange de plusieurs vocabulaires	        Oui	                                        Non
Travail dans un seul vocabulaire	        Pas nécessaire	                            Oui
XSLT (qui mélange XSLT + autre XML/HTML)	Oui pour XSLT, non pour le reste	        Oui pour tout le reste si voulu

/////////////////////////////////////////////////////

XSL (Extensible Stylesheet Language) est le parent de XSLT XPATH XSL-FO ect...

+---------------------+
|     XML or HTTP     |
+---------------------+
        ▲
        |
+---------------------+
|       XLink         |  ←  ajoute des liens entre XML
+---------------------+
        ▲
        |
+---------------------+
|      XPointer       |  ←  pointe vers une partie d'un XML (utilise XPath)
+---------------------+
        ▲
        |
+---------------------+       +---------------------+
|       XPath         |  <--- |       XQuery         | ← requêtes avancées (comme SQL)
+---------------------+       +---------------------+
        ▲
        |
+---------------------+
|        XSLT         |  ←  transforme un XML vers un autre format (utilise XPath)
+---------------------+


Ordre chronologique et dependence

 XPath (1999) ─────┐
                   ├─> XSLT (1999)
                   ├─> XPointer (2001)
                   └─> XQuery (2007)
 XLink (2000) ───┬────────────────┘
                └─> Peut utiliser XPointer pour cibler une partie précise


///////////////////////////////////////

XSLT
Xtensible Stylesheet Language Transformations  (comme un template mais front ou comme du html)

<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:template match="/">
    <html>
    <body>
      <h2>My CD Collection</h2>
      <table border="1">
        <tr><th>Title</th><th>Artist</th></tr>
        <xsl:for-each select="catalog/cd">
          <tr>
            <td><xsl:value-of select="title"/></td>
            <td><xsl:value-of select="artist"/></td>
          </tr>
        </xsl:for-each>
      </table>
    </body>
    </html>
  </xsl:template>

</xsl:stylesheet>

////////////////////////////////////////////////

XPATH   XML Path Language

Opérateur	    Signification
/	            Sélection directe (enfant immédiat)
//	            Sélection n'importe où (descendant)
@	            Sélection d'un attribut
[]	            Filtre ou position
*	            Sélectionne tous les éléments
`	            `  same as "
=	            Égalité
!=	            Différent
<, >, <=, >=	Comparaison numérique ou textuelle
text()	        Sélectionne le texte d’un élément
position()	    Donne la position d’un élément dans un ensemble
last()	           Sélectionne le dernier élément

exemple en XSLT :

<xsl:for-each select="/library/book[@category='fantasy']">
  <p>
    <xsl:value-of select="title"/> by <xsl:value-of select="author"/>
  </p>
</xsl:for-each>

//////////

XPointeur (peu supporter hors systèmes documentaires XML professionnels)

C’est une extension d’URL pour cibler une partie précise d’un document XML.

Il est souvent combiné avec XLink pour faire des liens vers une partie spécifique d’un autre XML ou du même document.


books.xml#xpointer(id('book2'))

<?xml version="1.0"?>
<library>
  <book id="book1">
    <title>The Hobbit</title>
  </book>
  <book id="book2">
    <title>Harry Potter</title>
  </book>
</library>

/////////////////////////

XQuery 
is to XML what SQL is to databases.

for $x in doc("books.xml")/bookstore/book
where $x/price>30
order by $x/title
return $x/title

//////////////////////////////

XLink

ON doit define son namespace avant de lutiliser

<homepages xmlns:xlink="http://www.w3.org/1999/xlink">
  <homepage xlink:type="simple" xlink:href="https://www.w3schools.com">Visit W3Schools</homepage>
  <homepage xlink:type="simple" xlink:href="http://www.w3.org">Visit W3C</homepage>
</homepages>

The XLink namespace is declared at the top of the document (xmlns:xlink="http://www.w3.org/1999/xlink")
The xlink:type="simple" creates a simple "HTML-like" link
The xlink:href attribute specifies the URL to link to (in this case - an image)
The xlink:show="new" specifies that the link should open in a new window

///////////////////////////////

XML DTD
Document Type Definition

An XML document with correct syntax is called "Well Formed".
An XML document validated against a DTD is both "Well Formed" and "Valid".

<?xml version="1.0"?>
<!DOCTYPE library SYSTEM "library.dtd">
<library>
  <book id="b001" category="fiction">
    <title>1984</title>
    <author>George Orwell</author>
    <price>19.99</price>
  </book>
  <book id="b002" category="sci-fi">
    <title>Dune</title>
    <author>Frank Herbert</author>
    <price>29.99</price>
  </book>
  <notice message="All rights reserved."/>
</library>



<!-- Déclaration du document root -->
<!ELEMENT library (book+)>

<!-- Déclaration de book avec ses sous-éléments -->
<!ELEMENT book (title, author, price)>
<!ATTLIST book
  id ID #REQUIRED
  category CDATA #IMPLIED
>

<!-- Déclaration des sous-éléments -->
<!ELEMENT title (#PCDATA)>
<!ELEMENT author (#PCDATA)>
<!ELEMENT price (#PCDATA)>

<!-- Déclaration d'une entité réutilisable -->
<!ENTITY copyright "All rights reserved.">

<!-- Déclaration d'un élément optionnel de type EMPTY (pas de contenu) -->
<!ELEMENT notice EMPTY>
<!ATTLIST notice message CDATA #REQUIRED>



Mot-clé DTD	        Description

<!ELEMENT>	        Déclare un élément et ses enfants
<!ATTLIST>	        Déclare des attributs
#PCDATA	            Données texte obligatoire
ID	                Un identifiant unique dans le document
CDATA	              Du texte brut (non typé)
#REQUIRED	          L'attribut est obligatoire
#IMPLIED	          L'attribut est optionnel
EMPTY	              Éléments sans contenu
+	                  Un ou plusieurs éléments
<!ENTITY>	          Déclare une entité réutilisable

/////////////////////////////////////////////////////////////////////////////////////

XML Schema

An XML Schema describes the structure of an XML document, just like a DTD.
An XML document with correct syntax is called "Well Formed".
An XML document validated against an XML Schema is both "Well Formed" and "Valid".

XML Schemas are More Powerful than DTD
XML Schemas are written in XML
XML Schemas are extensible to additions
XML Schemas support data types
XML Schemas support namespaces


<xs:element name="note">

<xs:complexType>
  <xs:sequence>
    <xs:element name="to" type="xs:string"/>
    <xs:element name="from" type="xs:string"/>
    <xs:element name="heading" type="xs:string"/>
    <xs:element name="body" type="xs:string"/>
  </xs:sequence>
</xs:complexType>

</xs:element>



The Schema above is interpreted like this:

<xs:element name="note"> defines the element called "note"
<xs:complexType> the "note" element is a complex type
<xs:sequence> the complex type is a sequence of elements
<xs:element name="to" type="xs:string"> the element "to" is of type string (text)
<xs:element name="from" type="xs:string"> the element "from" is of type string
<xs:element name="heading" type="xs:string"> the element "heading" is of type string
<xs:element name="body" type="xs:string"> the element "body" is of type string


//////////////////////////////////////////////////////

XSD Data Type


+---------------------------+----------------------------------------------------+----------------------------+
| Type XSD                   | Description                                        | Exemple                    |
+---------------------------+----------------------------------------------------+----------------------------+
| xs:string                  | Chaîne de texte                                    | "Hello World"              |
| xs:normalizedString        | Chaîne sans caractères de contrôle (tab, retour chariot) | "Hello World"        |
| xs:token                   | Chaîne sans espaces en début, fin, ou multiples espaces | "Hello World"        |
| xs:boolean                 | Booléen vrai ou faux                               | true, false                |
| xs:decimal                 | Nombre décimal                                    | 12.34                      |
| xs:integer                 | Nombre entier                                     | 42                         |
| xs:float                   | Nombre flottant simple précision                   | 3.14                       |
| xs:double                  | Nombre flottant double précision                   | 2.71828                    |
| xs:date                    | Date (AAAA-MM-JJ)                                  | 2025-05-18                 |
| xs:time                    | Heure (HH:MM:SS)                                   | 13:45:30                   |
| xs:dateTime                | Date et heure combinées                            | 2025-05-18T13:45:30        |
| xs:duration                | Durée (ISO 8601)                                   | P1Y2M3DT4H5M6S             |
+---------------------------+----------------------------------------------------+----------------------------+
| xs:nonNegativeInteger      | Entier >= 0                                        | 5                          |
| xs:positiveInteger         | Entier > 0                                         | 1                          |
| xs:nonPositiveInteger      | Entier <= 0                                        | -5                         |
| xs:negativeInteger         | Entier < 0                                         | -1                         |
| xs:byte                    | Entier entre -128 et 127                           | -100                       |
| xs:short                   | Petit entier                                      | 32000                      |
| xs:long                    | Grand entier                                      | 1234567890123              |
+---------------------------+----------------------------------------------------+----------------------------+
| xs:ID                      | Identifiant unique dans le document                | id123                      |
| xs:IDREF                   | Référence vers un ID existant                      | id123                      |
| xs:IDREFS                  | Liste de références ID séparées par des espaces    | id123 id456                |
| xs:NCName                  | Nom sans deux-points (:)                           | validName                  |
+---------------------------+----------------------------------------------------+----------------------------+
| xs:anyURI                  | URI ou URL                                        | https://example.com        |
| xs:base64Binary            | Données binaires en Base64                         | SGVsbG8=                   |
| xs:hexBinary               | Données binaires en hexadécimal                    | 4FA3                       |
+---------------------------+----------------------------------------------------+----------------------------+
| xs:QName                   | Nom qualifié avec namespace                       | ns:ElementName             |
| xs:NOTATION                | Indique une notation                              | image/jpeg                 |
+---------------------------+----------------------------------------------------+----------------------------+

Notes :
- xs:normalizedString supprime les caractères de contrôle (tabulations, sauts de ligne).
- xs:token supprime les espaces en début, fin et réduit les espaces multiples à un seul.
- P1Y2M3DT4H5M6S correspond à 1 an, 2 mois, 3 jours, 4 heures, 5 minutes et 6 secondes (format ISO 8601).
- xs:ID, xs:IDREF, xs:IDREFS permettent de gérer des références croisées dans un document XML.
- xs:anyURI peut contenir une URL, un chemin local ou une référence.
- xs:QName est utilisé pour les noms qualifiés avec namespace (préfixe:Nom).
